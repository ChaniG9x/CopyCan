//@version=5
indicator("Tier 2 Daily Pattern", overlay=true, shorttitle="T2DP")

// Define timeframe flag
isDaily = timeframe.isdaily

// EMA lengths
emaLen10  = 10
emaLen20  = 20
emaLen200 = 200

// Calculate EMAs
ema10  = ta.ema(close, emaLen10)
ema20  = ta.ema(close, emaLen20)
ema200 = ta.ema(close, emaLen200)

// Plot EMAs
plot(ema10, title="EMA 10", color=color.blue)
plot(ema20, title="EMA 20", color=color.red)
plot(ema200, title="EMA 200", color=color.orange)

// Ensure labels are only drawn when EMA 10 > EMA 20 and EMA 20 > EMA 200
emaTrendOk = (ema10 > ema20) and (ema20 > ema200)

// Function to check if a candle crosses an EMA value
crosses(emaVal) =>
    (low < emaVal) and (high > emaVal)

// -----------------------
// T2/T3 Logic Variables
// -----------------------
var bool restricted       = false
var bool bearishCandidate = false
var bool justReset        = false
var bool t2Triggered      = false

justReset := false

// Reset restriction if current candle is bullish and above ema10
if restricted
    if (close > open) and (close > ema10)
        restricted       := false
        justReset        := true
        bearishCandidate := false

t2Triggered := false
var bool permission = false

if not restricted and not justReset and emaTrendOk
    condA = (close > open) and (crosses(ema10) or crosses(ema20)) and (close > ema10)
    condBearCandidate = (close < open) and (crosses(ema10) or crosses(ema20)) and (close > ema10)
    if condBearCandidate
        bearishCandidate := true
    condBConfirm = bearishCandidate and (close > open) and (close > ema10)
    if condA or condBConfirm
        permission       := true
        bearishCandidate := false

if not restricted and not justReset
    if (open < ema20) or (close < ema20)
        restricted       := true
        bearishCandidate := false

// -----------------------
// Daily T2/T3 Labeling and Daily Signal Generation
// -----------------------
// The daily logic remains completely unchanged.
// dailySignal stores the daily trigger: 0 = none, 2 = T2, 3 = T3.
var int dailySignal = 0

if isDaily and permission and barstate.isconfirmed and emaTrendOk
    label.new(x=bar_index, y=high, text="T2", style=label.style_label_down, color=color.new(color.green, 0), textcolor=color.white)
    t2Triggered := true
    dailySignal := 2

permission := false

var bool permissionT3 = false
if isDaily and emaTrendOk
    permissionT3 := (close > open) and (open > ema10) and (close > ema10)

if isDaily and permissionT3 and barstate.isconfirmed and not t2Triggered and emaTrendOk
    label.new(x=bar_index, y=high, text="T3", style=label.style_label_down, color=color.new(color.orange, 0), textcolor=color.white)
    dailySignal := 3

// -----------------------
// Lower Timeframe Labeling
// -----------------------
// On lower timeframes (4h and 1h), we want to allow T2 logic only if yesterday's daily bar
// produced a T2 or T3 signal. This permission lasts for the day and resets at the new daily candle.
// The call to request.security is unconditional.
dailyPerm = request.security(syminfo.tickerid, "D", dailySignal[1])

if not isDaily and dailyPerm != 0 and barstate.isconfirmed and emaTrendOk
    if permission
        labelText  = dailyPerm == 2 ? "T2" : "T3"
        labelColor = dailyPerm == 2 ? color.new(color.green, 0) : color.new(color.orange, 0)
        label.new(x=bar_index, y=high, text=labelText, style=label.style_label_down, color=labelColor, textcolor=color.white)

// Reset the permission at the start of a new day on lower timeframes.
if not isDaily and ta.change(time("D"))
    permission := false
