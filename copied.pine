//@version=5
indicator("Tier 2 Daily Pattern", overlay=true)

// Define EMAs
ema10 = ta.ema(close, 10)
ema20 = ta.ema(close, 20)
ema200 = ta.ema(close, 200)

// Conditions for Tier 2 Pattern (🔁)
bullish_condition = close > open and (low < ema10 and close > ema10)
bearish_condition = close < open and (high > ema10 and close > ema10)

// EMA 10 > EMA 20 > EMA 200 condition
ema_condition = ema10 > ema20 and ema20 > ema200

// Condition 1: Bullish candle closes above 10 EMA
condition_t2_met = false
if ema_condition
    if bullish_condition and close > ema10
        condition_t2_met := true

// Condition 2: Bearish candle closes above 10 EMA, and the next day is bullish and closes above 10 EMA
next_day_bullish = close[1] > open[1] and close[1] > ema10
condition_t2_met := condition_t2_met or (bearish_condition and close > ema10 and next_day_bullish)

// Restriction condition: If candle's open or close is below 20 EMA, wait for bullish candle to close above 10 EMA
restriction_condition = (open < ema20 or close < ema20)

// First bullish close above 10 EMA does not count for Tier 2 Pattern
first_bullish_close_above_10 = close > ema10 and close[1] < ema10

// Reset condition after first bullish close above 10 EMA
if first_bullish_close_above_10
    condition_t2_met := false

// Debugging label logic: Green "T2" label when conditions are met
if condition_t2_met and not restriction_condition
    label.new(bar_index, high, "T2", style=label.style_label_up, color=color.green, textcolor=color.white, size=size.small)

// Plot EMAs
plot(ema10, color=color.blue, linewidth=2, title="EMA 10")
plot(ema20, color=color.red, linewidth=2, title="EMA 20")
plot(ema200, color=color.orange, linewidth=2, title="EMA 200")
