//@version=5
indicator("Tier 2 Pattern with Cascading Gates (CAPA)", overlay=true, shorttitle="T2DP_Cascaded")

// Plot EMAs on the chart
ema10_main  = ta.ema(close, 10)
ema20_main  = ta.ema(close, 20)
ema200_main = ta.ema(close, 200)
plot(ema10_main, title="EMA 10", color=color.blue)
plot(ema20_main, title="EMA 20", color=color.red)
plot(ema200_main, title="EMA 200", color=color.orange)

// Helper function defined at the top level
crosses(_ema) =>
    (low < _ema) and (high > _ema)

// Tier 2 pattern detection function
f_tier2Pattern() =>
    ema10  = ta.ema(close, 10)
    ema20  = ta.ema(close, 20)
    ema200 = ta.ema(close, 200)
    emaTrendOk = (ema10 > ema20) and (ema20 > ema200)
    var bool restricted = false
    var bool bearishCandidate = false
    var bool justReset = false
    justReset := false

    if restricted
        if (close > open) and (close > ema10)
            restricted := false
            justReset := true
            bearishCandidate := false

    var bool permission = false
    if not restricted and not justReset and emaTrendOk
        condA = (close > open) and ((crosses(ema10)) or (crosses(ema20))) and (close > ema10)
        condBearCandidate = (close < open) and ((crosses(ema10)) or (crosses(ema20))) and (close > ema10)
        if condBearCandidate
            bearishCandidate := true
        condBConfirm = bearishCandidate and (close > open) and (close > ema10)
        if condA or condBConfirm
            permission := true
            bearishCandidate := false

    if not restricted and not justReset
        if (open < ema20) or (close < ema20)
            restricted := true
            bearishCandidate := false

    result = permission and barstate.isconfirmed and (not restricted)
    permission := false
    result

// ------------------- Cascading Permission Logic -------------------

// Declare persistent variables
var bool dailyConfirmed = false
var bool fourhConfirmed = false
var bool onehConfirmed = false
var bool min1Confirmed = false
var bool min15Confirmed = false
var bool sec10Confirmed = false

// Get previous daily confirmation
dailyConfirmed := request.security(syminfo.tickerid, "D", f_tier2Pattern() ? 1 : 0, lookahead=barmerge.lookahead_off) == 1

// Pass previous daily confirmation to 4h and 1h
fourhConfirmed := request.security(syminfo.tickerid, "240", dailyConfirmed[1] ? 1 : 0, lookahead=barmerge.lookahead_off) == 1
onehConfirmed := request.security(syminfo.tickerid, "60", fourhConfirmed[1] ? 1 : 0, lookahead=barmerge.lookahead_off) == 1

// Pass previous 4h confirmation to 15m and 1m
min15Confirmed := request.security(syminfo.tickerid, "15", fourhConfirmed[1] ? 1 : 0, lookahead=barmerge.lookahead_off) == 1
min1Confirmed := request.security(syminfo.tickerid, "1", onehConfirmed[1] ? 1 : 0, lookahead=barmerge.lookahead_off) == 1

// Pass previous 1h confirmation to 1m and 10s
sec10Confirmed := request.security(syminfo.tickerid, "10S", min1Confirmed[1] ? 1 : 0, lookahead=barmerge.lookahead_off) == 1

// ------------------- Debugging Labels -------------------

// Daily label appears only if daily confirmation is true
if timeframe.period == "D" and f_tier2Pattern() and dailyConfirmed
    label.new(bar_index, high, "T2", style=label.style_label_down, color=color.green, textcolor=color.white)

// 4h label appears only if 4h confirmation is true
if timeframe.period == "240" and f_tier2Pattern() and fourhConfirmed
    label.new(bar_index, high, "4h", style=label.style_label_down, color=color.orange, textcolor=color.white)

// 1h label appears only if 1h confirmation is true
if timeframe.period == "60" and f_tier2Pattern() and onehConfirmed
    label.new(bar_index, high, "1h", style=label.style_label_down, color=color.red, textcolor=color.white)

// 15m label appears only if 15m confirmation is true
if timeframe.period == "15" and f_tier2Pattern() and min15Confirmed
    label.new(bar_index, low, "15m", style=label.style_label_up, color=color.orange, textcolor=color.white)

// 1m label appears only if 1m confirmation is true
if timeframe.period == "1" and f_tier2Pattern() and min1Confirmed
    label.new(bar_index, low, "1m", style=label.style_label_up, color=color.red, textcolor=color.white)

// 10s label appears only if 10s confirmation is true
if timeframe.period == "10S" and f_tier2Pattern() and sec10Confirmed
    label.new(bar_index, high, "10s", style=label.style_label_left, color=color.red, textcolor=color.white)
