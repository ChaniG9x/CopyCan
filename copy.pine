//@version=5
indicator("Cascading MTF Pattern Detector (Next-Phase Logic)", overlay=true)

// === EMA CALCULATIONS ===
ema10 = ta.ema(close, 10)
ema20 = ta.ema(close, 20)
ema50 = ta.ema(close, 50)
ema200 = ta.ema(close, 200)

// === PLOT EMAs ===
plot(ema10, title="EMA 10", color=color.blue, linewidth=2)
plot(ema20, title="EMA 20", color=color.red, linewidth=2)
plot(ema200, title="EMA 200", color=color.orange, linewidth=2)

// === EMA ALIGNMENT ===
emaBullAlign = ema10 > ema20 and ema20 > ema50 and ema50 > ema200

// === PATTERN CONDITIONS ===
condA(ema) => close > open and low < ema and high > ema and close > ema
condB(ema) => close[1] < open[1] and low[1] < ema and high[1] > ema and close > open and close > ema

// === CONFIRMATION FUNCTION WITH TIMESTAMP ===
confirmPattern(tf) =>
    ema = request.security(syminfo.tickerid, tf, ta.ema(close, 10))
    confirmed = request.security(syminfo.tickerid, tf, condA(ema) or condB(ema))
    confirmedTime = request.security(syminfo.tickerid, tf, time)
    [confirmed, confirmedTime]

// === GET CONFIRMATION + TIME FROM PARENT TIMEFRAME ===
[dailyConfirmed, dailyTime] = confirmPattern("D")
[h4Confirmed, h4Time]       = confirmPattern("240")
[h1Confirmed, h1Time]       = confirmPattern("60")

// === DETECT CURRENT TIMEFRAME ===
tf = timeframe.period
is10s = tf == "10S"
is1m = tf == "1"
is15m = tf == "15"
is1h = tf == "60"
is4h = tf == "240"
is1d = tf == "D"

// === CURRENT BAR TIME ===
t = time

// === NEXT-PHASE UNLOCK LOGIC ===
// Allow only if we're in a candle AFTER the parent confirmed, using time comparison

dailyUnlock = dailyConfirmed and t > dailyTime
h4Unlock = h4Confirmed and t > h4Time
h1Unlock = h1Confirmed and t > h1Time

permissionGranted =
    is1d ? true :
    (is4h or is1h) and dailyUnlock ? true :
    (is15m or (is1m and not is1h and not is4h)) and h4Unlock ? true :
    is10s and h1Unlock ? true : false

// === RESET CONDITION ===
var bool restricted = false
if (open < ema20 or close < ema20)
    restricted := true
if condA(ema10)
    restricted := false

// === FINAL PATTERN DETECTION ===
patternDetected = (condA(ema10) or condB(ema10)) and not restricted and permissionGranted and emaBullAlign

// === LABEL ===
if patternDetected
    label.new(bar_index, high, "Pattern", style=label.style_label_up, color=color.green, textcolor=color.white)
