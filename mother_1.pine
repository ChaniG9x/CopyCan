//@version=5
indicator("Monthly & Weekly Bias + EMA Order + Overall Condition (Locked)", overlay=true)

// ——— Helper to track last opposite-color open ———
f_prev_opposite_open(_res) =>
    var float prev_green_open = na
    var float prev_red_open   = na
    _c = request.security(syminfo.tickerid, _res, close[1], lookahead=barmerge.lookahead_off)
    _o = request.security(syminfo.tickerid, _res, open[1],  lookahead=barmerge.lookahead_off)
    if _c > _o
        prev_green_open := _o
    else if _c < _o
        prev_red_open   := _o
    [prev_green_open, prev_red_open]

// ——— Monthly Locking ———
[m_prev_green_open, m_prev_red_open] = f_prev_opposite_open("M")
m_open_closed  = request.security(syminfo.tickerid, "M", open[1],  lookahead=barmerge.lookahead_off)
m_close_closed = request.security(syminfo.tickerid, "M", close[1], lookahead=barmerge.lookahead_off)
[ema10_m, ema20_m, ema50_m, ema100_m] = request.security(syminfo.tickerid, "M", [ta.ema(close, 10), ta.ema(close, 20), ta.ema(close, 50), ta.ema(close, 100)], lookahead=barmerge.lookahead_off)

var int last_month_time = na
is_new_month = time("M") != last_month_time
var string locked_month_status = na
var string locked_month_ema = na
if is_new_month
    last_month_time := time("M")
    locked_month_status := (m_close_closed > m_open_closed and m_close_closed > m_prev_red_open) ? "Bullish" :
                           (m_close_closed < m_open_closed and m_close_closed < m_prev_green_open) ? "Bearish" : locked_month_status
    locked_month_ema := (ema10_m > ema20_m and ema20_m > ema50_m and ema50_m > ema100_m) ? "Aligned" : "Not Aligned"

// ——— Weekly Locking ———
[w_prev_green_open, w_prev_red_open] = f_prev_opposite_open("W")
w_open_closed  = request.security(syminfo.tickerid, "W", open[1],  lookahead=barmerge.lookahead_off)
w_close_closed = request.security(syminfo.tickerid, "W", close[1], lookahead=barmerge.lookahead_off)
[ema10_w, ema20_w, ema50_w, ema100_w] = request.security(syminfo.tickerid, "W", [ta.ema(close, 10), ta.ema(close, 20), ta.ema(close, 50), ta.ema(close, 100)], lookahead=barmerge.lookahead_off)

var int last_week_time = na
is_new_week = time("W") != last_week_time
var string locked_week_status = na
var string locked_week_ema = na
if is_new_week
    last_week_time := time("W")
    locked_week_status := (w_close_closed > w_open_closed and w_close_closed > w_prev_red_open) ? "Bullish" :
                          (w_close_closed < w_open_closed and w_close_closed < w_prev_green_open) ? "Bearish" : locked_week_status
    locked_week_ema := (ema10_w > ema20_w and ema20_w > ema50_w and ema50_w > ema100_w) ? "Aligned" : "Not Aligned"

// ——— Overall Setup Logic ———
monthly_ok = locked_month_status == "Bullish" and locked_month_ema == "Aligned"
weekly_ok  = locked_week_status == "Bullish" and locked_week_ema == "Aligned"

overall_condition = (locked_month_status == "Bullish" and locked_week_status == "Bullish") ?
    (monthly_ok and weekly_ok ? "Setup A" : "Setup B") : "NO TRADE"

is_setup_a = overall_condition == "Setup A"
is_setup_b = overall_condition == "Setup B"

if barstate.islast and timeframe.isintraday
    label.new(bar_index, high,
      text = "overall: " + overall_condition +
             "\nM: " + locked_month_status + " (" + locked_month_ema + ")" +
             "\nW: " + locked_week_status + " (" + locked_week_ema + ")",
      style=label.style_label_down, color=color.blue, textcolor=color.white)

// ——— Plot Daily EMAs ———
plot(ta.ema(close, 10),  title="EMA 10",  color=color.blue,   linewidth=2)
plot(ta.ema(close, 20),  title="EMA 20",  color=color.red,    linewidth=2)
plot(ta.ema(close, 50),  title="EMA 50",  color=color.gray,   linewidth=2)
plot(ta.ema(close,100),  title="EMA 100", color=color.purple, linewidth=2)
plot(ta.ema(close,200),  title="EMA 200", color=color.orange, linewidth=2)

// ——— Daily EMA Alignment for Momentum ———
daily_ema10  = request.security(syminfo.tickerid, "D", ta.ema(close, 10), lookahead=barmerge.lookahead_off)
daily_ema20  = request.security(syminfo.tickerid, "D", ta.ema(close, 20), lookahead=barmerge.lookahead_off)
daily_ema50  = request.security(syminfo.tickerid, "D", ta.ema(close, 50), lookahead=barmerge.lookahead_off)
daily_ema100 = request.security(syminfo.tickerid, "D", ta.ema(close,100), lookahead=barmerge.lookahead_off)
daily_ema200 = request.security(syminfo.tickerid, "D", ta.ema(close,200), lookahead=barmerge.lookahead_off)

daily_ema_ok = daily_ema10 > daily_ema20 and daily_ema20 > daily_ema50 and daily_ema50 > daily_ema100 and daily_ema100 > daily_ema200

// ——— Dominant Bar Logic ———
f_get_dominant() =>
    var float dom_open = na
    var float dom_close = na
    var float dom_saved_close = na

    red1_o = open[1], red1_c = close[1]
    red2_o = open[2], red2_c = close[2]
    red3_o = open[3], red3_c = close[3]
    red4_o = open[4], red4_c = close[4]
    red5_o = open[5], red5_c = close[5]

    green1_o = open[1], green1_c = close[1]
    green2_o = open[2], green2_c = close[2]
    green3_o = open[3], green3_c = close[3]

    last_red_open = red1_c < red1_o ? red1_o : red2_c < red2_o ? red2_o : red3_c < red3_o ? red3_o : red4_c < red4_o ? red4_o : red5_c < red5_o ? red5_o : na
    last_green_close = green1_c > green1_o ? green1_c : green2_c > green2_o ? green2_c : green3_c > green3_o ? green3_c : na

    is_green = close > open
    is_new_dominant = is_green and (close > last_red_open or close > last_green_close)

    if is_new_dominant
        dom_open := open
        dom_close := close
        dom_saved_close := close

    [dom_open, dom_close, dom_saved_close]

[dom_open_d, dom_close_d, dom_saved_close_d] = request.security(syminfo.tickerid, "D", f_get_dominant(), lookahead=barmerge.lookahead_off)

var float dominant_open = na
var float dominant_close = na
var float dominant_saved_close = na

dominant_open := nz(dom_open_d, dominant_open[1])
dominant_close := nz(dom_close_d, dominant_close[1])
dominant_saved_close := nz(dom_saved_close_d, dominant_saved_close[1])

// ——— Entry Patterns ———
isSuperEarlyEntry(ema10, ema20, ema50, ema100, ema200) =>
    ema10 > ema20 and ema20 > ema200 and ema50 < ema200 and ema100 < ema200 and close > open and close[1] < open[1] and close > ema10 and ((low < ema10 or low < ema20) or (low[1] < ema10 or low[1] < ema20)) and ((high > ema10 or high > ema20) or (high[1] > ema10 or high[1] > ema20)) and (math.abs(close - open) > math.abs(close[1] - open[1]))

crossed(ema) =>
    (low < ema and high > ema) or (low[1] < ema and high[1] > ema)

isEarlyEntry(ema50, ema100, ema200) =>
    ema50 > ema200 and ema100 > ema200 and ta.ema(close, 10) > ema200 and close > open and close[1] < open[1] and (crossed(ema50) or crossed(ema100) or crossed(ema200)) and close > ema200 and math.abs(close - open) > math.abs(close[1] - open[1])

// ——— Intraday EMAs ———
ema10 = ta.ema(close, 10)
ema20 = ta.ema(close, 20)
ema50 = ta.ema(close, 50)
ema100 = ta.ema(close, 100)
ema200 = ta.ema(close, 200)

super_early_entry_ok = isSuperEarlyEntry(ema10, ema20, ema50, ema100, ema200)
early_entry_ok = isEarlyEntry(ema50, ema100, ema200)
is_momentum = close > dominant_saved_close and daily_ema_ok

// ——— Momentum Entry Labels ———
if (timeframe.period == "1" or timeframe.period == "10S") and is_momentum
    if super_early_entry_ok
        label.new(bar_index, low, "M.SE\nDom: " + str.tostring(dominant_saved_close, "#.##"), style=label.style_label_up, color=color.green, textcolor=color.white)
    else if early_entry_ok
        label.new(bar_index, low, "M.E\nDom: " + str.tostring(dominant_saved_close, "#.##"), style=label.style_label_up, color=color.green, textcolor=color.white)

if (timeframe.period == "1" or timeframe.period == "10S") and super_early_entry_ok
    label.new(bar_index, high, "Super Early Entry", style=label.style_label_up, color=color.yellow, textcolor=color.black)

if (timeframe.period == "1" or timeframe.period == "10S") and early_entry_ok
    label.new(bar_index, high, "Early Entry", style=label.style_label_up, color=color.orange, textcolor=color.black)

// ——— Table Display ———
var table bias_tbl = table.new(position.top_right, 3, 4, border_width=1)
table.cell(bias_tbl, 0, 0, "Timeframe", text_color=color.white, bgcolor=color.blue)
table.cell(bias_tbl, 1, 0, "Status", text_color=color.white, bgcolor=color.blue)
table.cell(bias_tbl, 2, 0, "EMA Order", text_color=color.white, bgcolor=color.blue)
table.cell(bias_tbl, 0, 1, "Monthly", text_color=color.white, bgcolor=color.blue)
table.cell(bias_tbl, 1, 1, locked_month_status, text_color=(locked_month_status == "Bullish" ? color.green : color.red))
table.cell(bias_tbl, 2, 1, locked_month_ema, text_color=(locked_month_ema == "Aligned" ? color.green : color.red))
table.cell(bias_tbl, 0, 2, "Weekly", text_color=color.white, bgcolor=color.blue)
table.cell(bias_tbl, 1, 2, locked_week_status, text_color=(locked_week_status == "Bullish" ? color.green : color.red))
table.cell(bias_tbl, 2, 2, locked_week_ema, text_color=(locked_week_ema == "Aligned" ? color.green : color.red))
table.cell(bias_tbl, 0, 3, "Condition", text_color=color.white, bgcolor=color.blue)
table.cell(bias_tbl, 1, 3, overall_condition, text_color=(overall_condition == "NO TRADE" ? color.red : color.green))
table.cell(bias_tbl, 2, 3, "")
