// === The Mother Strategy â€“ Phase 2: Global Vars + Weekly+Monthly Setup with EMA Check ===
//@version=5
strategy("The Mother (Phase 2)", overlay=true, default_qty_type=strategy.percent_of_equity, default_qty_value=100)

// === GLOBAL INPUTS ===
contractSize    = input.int(1, "Contract Size")
tradeDirection  = input.string("Long", "Trade Direction", options=["Long"], tooltip="Only bullish logic supported")
showDebugLabels = input.bool(true, "Show Debug Labels")

// === TRADING SESSION CONTROL ===
session1_start = input.time(timestamp("0000-01-01T08:00:00"), "Session 1 Start")
session1_end   = input.time(timestamp("0000-01-01T11:00:00"), "Session 1 End")
session2_start = input.time(timestamp("0000-01-01T13:00:00"), "Session 2 Start")
session2_end   = input.time(timestamp("0000-01-01T17:00:00"), "Session 2 End")

inSession = (time >= session1_start and time <= session1_end) or (time >= session2_start and time <= session2_end)

// === WEEKLY PRICE-ACTION CHECK ===
w_open1  = request.security(syminfo.tickerid, "W", open[1])
w_close1 = request.security(syminfo.tickerid, "W", close[1])
w_open2  = request.security(syminfo.tickerid, "W", open[2])
w_close2 = request.security(syminfo.tickerid, "W", close[2])

isPrevWeeklyRed   = w_close2 < w_open2
isPrevWeeklyGreen = w_close2 > w_open2
weeklyPass = (isPrevWeeklyRed and w_close1 > w_open2) or (isPrevWeeklyGreen and w_close1 >= w_open2)

// === MONTHLY PRICE-ACTION CHECK ===
m_open1  = request.security(syminfo.tickerid, "M", open[1])
m_close1 = request.security(syminfo.tickerid, "M", close[1])
m_open2  = request.security(syminfo.tickerid, "M", open[2])
m_close2 = request.security(syminfo.tickerid, "M", close[2])

isPrevMonthlyRed   = m_close2 < m_open2
isPrevMonthlyGreen = m_close2 > m_open2
monthlyPass = (isPrevMonthlyRed and m_close1 > m_open2) or (isPrevMonthlyGreen and m_close1 >= m_open2)

// === WEEKLY EMA STACK CHECK ===
w_ema10  = request.security(syminfo.tickerid, "W", ta.ema(close, 10))
w_ema20  = request.security(syminfo.tickerid, "W", ta.ema(close, 20))
w_ema50  = request.security(syminfo.tickerid, "W", ta.ema(close, 50))
w_ema100 = request.security(syminfo.tickerid, "W", ta.ema(close, 100))
w_ema200 = request.security(syminfo.tickerid, "W", ta.ema(close, 200))

emaStacked    = w_ema10 > w_ema20 and w_ema20 > w_ema50 and w_ema50 > w_ema100 and w_ema100 > w_ema200
priceAbove200 = w_close1 > w_ema200

// === EMA PLOTTING ON CURRENT CHART TF (Visual Reference) ===
ema10  = ta.ema(close, 10)
ema20  = ta.ema(close, 20)
ema50  = ta.ema(close, 50)
ema100 = ta.ema(close, 100)
ema200 = ta.ema(close, 200)

plot(ema10,  title="EMA 10",  color=color.blue)
plot(ema20,  title="EMA 20",  color=color.red)
plot(ema50,  title="EMA 50",  color=color.gray)
plot(ema100, title="EMA 100", color=color.purple)
plot(ema200, title="EMA 200", color=color.orange)

// === FINAL WEEKLY SETUP RATING ===
isAsetup = weeklyPass and monthlyPass and emaStacked and priceAbove200
weeklyRating = isAsetup ? "A" : "B"

// === DEBUG TABLE ===
var table debugTable = table.new(position.top_right, 1, 2, frame_color=color.gray, border_color=color.gray)
if showDebugLabels
    table.cell(debugTable, 0, 0, "Setup Type:", text_color=color.white, bgcolor=color.blue)
    table.cell(debugTable, 0, 1, weeklyRating, text_color=color.white, bgcolor=color.navy)

// === LOGIC NOTES ===
// A-Rated Setup must pass ALL of the following:
// - Weekly bar closes above previous red open (or doesn't break green open)
// - Monthly bar closes above previous red open (or doesn't break green open)
// - EMAs stacked cleanly (10 > 20 > 50 > 100 > 200)
// - Weekly close is above the 200 EMA
// All other cases are B-Rated
