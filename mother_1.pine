// === The Mother Strategy â€“ Phase 2: Global Vars + Weekly+Monthly Setup Locked with request.security() ===
//@version=5
strategy("The Mother (Phase 2)", overlay=true, default_qty_type=strategy.percent_of_equity, default_qty_value=100)

// === GLOBAL INPUTS ===
contractSize    = input.int(1, "Contract Size")
tradeDirection  = input.string("Long", "Trade Direction", options=["Long"], tooltip="Only bullish logic supported")
showDebugLabels = input.bool(true, "Show Debug Labels")

// === TRADING SESSION CONTROL ===
session1_start = input.time(timestamp("0000-01-01T08:00:00"), "Session 1 Start")
session1_end   = input.time(timestamp("0000-01-01T11:00:00"), "Session 1 End")
session2_start = input.time(timestamp("0000-01-01T13:00:00"), "Session 2 Start")
session2_end   = input.time(timestamp("0000-01-01T17:00:00"), "Session 2 End")

inSession = (time >= session1_start and time <= session1_end) or (time >= session2_start and time <= session2_end)

// === REQUESTED SETUP RATING FROM WEEKLY CONTEXT ===
[weeklyRatingFinal] = request.security(syminfo.tickerid, "W",
    [() =>
        // === Weekly Structure ===
        w_open1  = open[1]
        w_close1 = close[1]
        w_open2  = open[2]
        w_close2 = close[2]
        isPrevRed   = w_close2 < w_open2
        isPrevGreen = w_close2 > w_open2
        w_struct = (isPrevRed and w_close1 > w_open2) or (isPrevGreen and w_close1 >= w_open2)

        // === Monthly Structure ===
        m_open1  = request.security(syminfo.tickerid, "M", open[1])
        m_close1 = request.security(syminfo.tickerid, "M", close[1])
        m_open2  = request.security(syminfo.tickerid, "M", open[2])
        m_close2 = request.security(syminfo.tickerid, "M", close[2])
        isPrevMRed   = m_close2 < m_open2
        isPrevMGreen = m_close2 > m_open2
        m_struct = (isPrevMRed and m_close1 > m_open2) or (isPrevMGreen and m_close1 >= m_open2)

        structureOK = w_struct and m_struct

        // === Weekly EMAs ===
        ema10  = ta.ema(close, 10)[1]
        ema20  = ta.ema(close, 20)[1]
        ema50  = ta.ema(close, 50)[1]
        ema100 = ta.ema(close, 100)[1]
        ema200 = ta.ema(close, 200)[1]
        stacked = ema10 > ema20 and ema20 > ema50 and ema50 > ema100 and ema100 > ema200
        priceAboveAll = close[1] > ema10 and close[1] > ema20 and close[1] > ema50 and close[1] > ema100 and close[1] > ema200

        // === B-Rating Check ===
        m_ema20 = request.security(syminfo.tickerid, "M", ta.ema(close, 20)[1])
        b_valid = close[1] > ema20 and m_close1 > m_ema20

        // === Final Rating ===
        structureOK and stacked and priceAboveAll ? "A" : structureOK and b_valid ? "B" : "No Trade"
    }()],
    lookahead=barmerge.lookahead_on)

// === PLOT EMAS ON CURRENT CHART TF ===
ema10  = ta.ema(close, 10)
ema20  = ta.ema(close, 20)
ema50  = ta.ema(close, 50)
ema100 = ta.ema(close, 100)
ema200 = ta.ema(close, 200)

plot(ema10,  title="EMA 10",  color=color.blue)
plot(ema20,  title="EMA 20",  color=color.red)
plot(ema50,  title="EMA 50",  color=color.gray)
plot(ema100, title="EMA 100", color=color.purple)
plot(ema200, title="EMA 200", color=color.orange)

// === DEBUG TABLE ===
var table debugTable = table.new(position.top_right, 1, 2, frame_color=color.gray, border_color=color.gray)
if showDebugLabels
    table.cell(debugTable, 0, 0, "Setup Type:", text_color=color.white, bgcolor=color.blue)
    table.cell(debugTable, 0, 1, weeklyRatingFinal, text_color=color.white, bgcolor=color.navy)

// === LOGIC NOTES ===
// A-Rated: Weekly & Monthly structure confirmed + EMA stack clean + price above ALL EMAs
// B-Rated: Weekly & Monthly structure confirmed + price above 20 EMA on both timeframes
// No Trade: Structure fails or price not above stacked EMAs
// Logic fully isolated in request.security("W") block for stable output
