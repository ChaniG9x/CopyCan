// === The Mother Strategy – Phase 2: Global Vars + Stable Weekly+Monthly Setup Rating ===
//@version=5
strategy("The Mother (Phase 2)", overlay=true, default_qty_type=strategy.percent_of_equity, default_qty_value=100)

// === GLOBAL INPUTS ===
contractSize    = input.int(1, "Contract Size")
tradeDirection  = input.string("Long", "Trade Direction", options=["Long"], tooltip="Only bullish logic supported")
showDebugLabels = input.bool(true, "Show Debug Labels")

// === TRADING SESSION CONTROL ===
session1_start = input.time(timestamp("0000-01-01T08:00:00"), "Session 1 Start")
session1_end   = input.time(timestamp("0000-01-01T11:00:00"), "Session 1 End")
session2_start = input.time(timestamp("0000-01-01T13:00:00"), "Session 2 Start")
session2_end   = input.time(timestamp("0000-01-01T17:00:00"), "Session 2 End")

inSession = (time >= session1_start and time <= session1_end) or (time >= session2_start and time <= session2_end)

// === WEEKLY RATING FUNCTION ===
f_getWeeklyRating() =>
    // Weekly data
    w_open1  = open[1]
    w_close1 = close[1]
    w_open2  = open[2]
    w_close2 = close[2]

    // Monthly data
    m_open1  = request.security(syminfo.tickerid, "M", open[1])
    m_close1 = request.security(syminfo.tickerid, "M", close[1])
    m_open2  = request.security(syminfo.tickerid, "M", open[2])
    m_close2 = request.security(syminfo.tickerid, "M", close[2])

    // Weekly EMAs
    w_ema10  = ta.ema(close, 10)
    w_ema20  = ta.ema(close, 20)
    w_ema50  = ta.ema(close, 50)
    w_ema100 = ta.ema(close, 100)
    w_ema200 = ta.ema(close, 200)

    // Monthly 20 EMA
    m_ema20  = request.security(syminfo.tickerid, "M", ta.ema(close, 20))

    // Structure checks
    isPrevWeeklyRed   = w_close2 < w_open2
    isPrevWeeklyGreen = w_close2 > w_open2
    isPrevMonthlyRed  = m_close2 < m_open2
    isPrevMonthlyGreen = m_close2 > m_open2

    weeklyStructurePass  = (isPrevWeeklyRed  and w_close1 > w_open2) or (isPrevWeeklyGreen  and w_close1 >= w_open2)
    monthlyStructurePass = (isPrevMonthlyRed and m_close1 > m_open2) or (isPrevMonthlyGreen and m_close1 >= m_open2)
    structureOK = weeklyStructurePass and monthlyStructurePass

    // EMA alignment checks
    emaStacked       = w_ema10 > w_ema20 and w_ema20 > w_ema50 and w_ema50 > w_ema100 and w_ema100 > w_ema200
    priceAboveAllEMAs = w_close1 > w_ema10 and w_close1 > w_ema20 and w_close1 > w_ema50 and w_close1 > w_ema100 and w_close1 > w_ema200
    m_above20        = m_close1 > m_ema20
    w_above20        = w_close1 > w_ema20

    // Rating
    isA = structureOK and emaStacked and priceAboveAllEMAs
    isB = structureOK and not isA and m_above20 and w_above20
    isA ? "A" : isB ? "B" : "No Trade"

// === CALL WEEKLY RATING ON EVERY BAR, GAP FILL ENABLED ===
weeklyRating = request.security(
    syminfo.tickerid,
    "W",
    f_getWeeklyRating(),
    lookahead = barmerge.lookahead_on,
    gaps      = barmerge.gaps_off)

// === PLOT EMAS ON CURRENT CHART TF ===
ema10  = ta.ema(close, 10)
ema20  = ta.ema(close, 20)
ema50  = ta.ema(close, 50)
ema100 = ta.ema(close, 100)
ema200 = ta.ema(close, 200)

plot(ema10,  title="EMA 10",  color=color.blue)
plot(ema20,  title="EMA 20",  color=color.red)
plot(ema50,  title="EMA 50",  color=color.gray)
plot(ema100, title="EMA 100", color=color.purple)
plot(ema200, title="EMA 200", color=color.orange)

// === DEBUG TABLE ===
var table debugTable = table.new(position.top_right, 1, 2, frame_color=color.gray, border_color=color.gray)
if showDebugLabels
    table.cell(debugTable, 0, 0, "Setup Type:", text_color=color.white, bgcolor=color.blue)
    table.cell(debugTable, 0, 1, weeklyRating, text_color=color.white, bgcolor=color.navy)

// === LOGIC NOTES ===
// A‑Rated: Weekly & Monthly structure confirmed + EMA stack clean + price above ALL EMAs
// B‑Rated: Weekly & Monthly structure confirmed + price above 20 EMA on both timeframes
// No Trade: Structure fails or price not above stacked EMAs
// Rating delivered by weekly series so it stays fixed on any chart timeframe
