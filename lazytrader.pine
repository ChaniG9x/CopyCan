//@version=5
strategy("Lazy Trader Strategy with Dynamic HTF Price Action Stop", overlay=true, default_qty_type=strategy.percent_of_equity, default_qty_value=100)

// --- EMAs ---
ema10 = ta.ema(close, 10)
ema20 = ta.ema(close, 20)
ema200 = ta.ema(close, 200)
plot(ema10, title="EMA 10", color=color.blue)
plot(ema20, title="EMA 20", color=color.red)
plot(ema200, title="EMA 200", color=color.orange)

// --- Tier 2 Pattern ---
crosses(_ema) => (low < _ema) and (high > _ema)

f_tier2Pattern() =>
    emaTrendOk = (ema10 > ema20) and (ema20 > ema200)
    var bool restricted = false
    var bool bearishCandidate = false
    var bool justReset = false
    justReset := false

    if restricted and (close > open) and (close > ema10)
        restricted := false
        justReset := true
        bearishCandidate := false

    var bool permission = false
    if not restricted and not justReset and emaTrendOk
        condA = (close > open) and ((crosses(ema10)) or (crosses(ema20))) and (close > ema10)
        condBearCandidate = (close < open) and ((crosses(ema10)) or (crosses(ema20))) and (close > ema10)
        if condBearCandidate
            bearishCandidate := true
        condBConfirm = bearishCandidate and (close > open) and (close > ema10)
        if condA or condBConfirm
            permission := true
            bearishCandidate := false

    if not restricted and not justReset and ((open < ema20) or (close < ema20))
        restricted := true
        bearishCandidate := false

    result = permission and barstate.isconfirmed and (not restricted)
    permission := false
    result

// --- Pattern Logic and Confirmations ---
patternResult = f_tier2Pattern()
dailyConfirmed_LTF = request.security(syminfo.tickerid, "D", patternResult ? 1 : 0, lookahead=barmerge.lookahead_off) == 1
t3confirmed_LTF = request.security(syminfo.tickerid, "D", false, lookahead=barmerge.lookahead_off) == 1  // Placeholder
fourHourConfirmed_LTF = request.security(syminfo.tickerid, "240", patternResult ? 1 : 0, lookahead=barmerge.lookahead_off) == 1
oneHourConfirmed_LTF = request.security(syminfo.tickerid, "60", patternResult ? 1 : 0, lookahead=barmerge.lookahead_off) == 1

// --- Debugging Labels (unchanged) ---
if timeframe.period == "15" and (((fourHourConfirmed_LTF and dailyConfirmed_LTF) or (fourHourConfirmed_LTF and t3confirmed_LTF)) and patternResult)
    label.new(bar_index, low, "15m", style=label.style_label_up, color=color.orange, textcolor=color.white)

if timeframe.period == "1" and (((oneHourConfirmed_LTF and dailyConfirmed_LTF) or (oneHourConfirmed_LTF and t3confirmed_LTF)) and patternResult)
    label.new(bar_index, low, "1m_1h", style=label.style_label_up, color=color.red, textcolor=color.white)

if timeframe.period == "1" and (((fourHourConfirmed_LTF and dailyConfirmed_LTF) or (fourHourConfirmed_LTF and t3confirmed_LTF)) and patternResult)
    label.new(bar_index, low, "1m_4h", style=label.style_label_upper_right, color=color.purple, textcolor=color.white)

if timeframe.period == "10S" and (((oneHourConfirmed_LTF and dailyConfirmed_LTF) or (oneHourConfirmed_LTF and t3confirmed_LTF)) and patternResult)
    label.new(bar_index, low, "10S", style=label.style_label_up, color=color.olive, textcolor=color.white)

// --- Price Action Management Tool Integration ---
selectedTimeframe_PA = input.timeframe("15", title="Select Timeframe for Price Action", options=["1", "15", "10", "60", "240", "D"], tooltip="Choose the timeframe for price action calculations")
price_action_adjustment_percent = input.float(0.0, "Price Action Line Adjustment (%)", minval=-100, maxval=100, step=0.1, tooltip="Adjust the Price Action Line")

isGreen_PA(candleClose, candleOpen) => candleClose > candleOpen

priceActionLine_HTF() =>
    var float base_priceActionLine = na
    if barstate.isconfirmed
        if isGreen_PA(close, open)
            if close > high[1]
                base_priceActionLine := low
            else if (close > open[1]) and (close[1] < open[1])
                base_priceActionLine := low
            else
                base_priceActionLine := na
        else
            base_priceActionLine := na
    base_priceActionLine

priceActionLine_base = request.security(syminfo.tickerid, selectedTimeframe_PA, priceActionLine_HTF(), lookahead=barmerge.lookahead_off)
priceActionLine = not na(priceActionLine_base) ? priceActionLine_base * (1 + price_action_adjustment_percent / 100) : na
plot(priceActionLine, color=color.green, title="Price Action Line", linewidth=2)

// --- Entry Logic + Stop at EMA200 initially ---
var float trailing_stop = na
var float fixed_stop_loss_level = na
var float stop_level = na

shouldEnter = false
entryLabel = ""

if timeframe.period == "15" and (((fourHourConfirmed_LTF and dailyConfirmed_LTF) or (fourHourConfirmed_LTF and t3confirmed_LTF)) and patternResult)
    shouldEnter := true
    entryLabel := "Buy_15m"
if timeframe.period == "1" and (((oneHourConfirmed_LTF and dailyConfirmed_LTF) or (oneHourConfirmed_LTF and t3confirmed_LTF)) and patternResult)
    shouldEnter := true
    entryLabel := "Buy_1m"
if timeframe.period == "10S" and (((oneHourConfirmed_LTF and dailyConfirmed_LTF) or (oneHourConfirmed_LTF and t3confirmed_LTF)) and patternResult)
    shouldEnter := true
    entryLabel := "Buy_10s"

if shouldEnter and strategy.position_size == 0
    strategy.entry(entryLabel, strategy.long)
    fixed_stop_loss_level := ema200
    trailing_stop := na

// --- Stop loss management ---
if strategy.position_size > 0
    inProfit = priceActionLine > strategy.position_avg_price
    if inProfit and not na(priceActionLine)
        trailing_stop := na(trailing_stop) ? priceActionLine : math.max(trailing_stop, priceActionLine)
    else
        trailing_stop := fixed_stop_loss_level
    stop_level := trailing_stop
    strategy.exit("Stop", stop=stop_level)

plot(strategy.position_size > 0 ? stop_level : na, title="Stop Level", color=color.yellow)
